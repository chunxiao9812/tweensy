package com.flashdynamix.motion.layers {	import flash.display.BitmapData;	import flash.geom.ColorTransform;	import flash.geom.Matrix;		/**	 * @author FlashDynamix	 */	public class SuperBitmapData extends BitmapData {
		public var source : BitmapData;		public var mtx : Matrix;		public var colorTrans : ColorTransform;				private var _y : Number = 0;		private var _x : Number = 0;		private var _scaleY : Number = 1;		private var _scaleX : Number = 1;		private var _skewX : Number = 0;		private var _skewY : Number = 0;		private var degreeRads : Number = (Math.PI / 180);		private var radsDegree : Number = (180 / Math.PI);
		public function SuperBitmapData(source : BitmapData, width : int, height : int) {			super(width, height, true, 0);			mtx = new Matrix();			colorTrans = new ColorTransform();			this.source = source.clone();		}		public function set x(pixels : Number) : void {			mtx.tx = pixels;			_x = pixels;		}				public function get x() : Number {			return _x;		}				public function set y(pixels : Number) : void {			mtx.ty = pixels;			_y = pixels;		}				public function get y() : Number {			return _y;		}		public function set rotation(amount : Number) : void {			skewX = amount;			skewY = amount;		}		public function set skewYDegree(value : Number) : void {			skewY = value * degreeRads;		}		public function get skewYDegree() : Number {			return _skewY * radsDegree;		}		public function set skewY(rads : Number) : void {			_skewY = rads;						mtx.a = _scaleX * Math.cos(_skewY);			mtx.b = _scaleX * Math.sin(_skewY);		}		public function get skewY() : Number {			return _skewY;		}		public function set skewXDegree(value : Number) : void {			skewX = value * degreeRads;		}		public function get skewXDegree() : Number {			return _skewX * radsDegree;		}		public function set skewX(rads : Number) : void {			_skewX = rads;						mtx.c = -_scaleY * Math.sin(_skewX);			mtx.d = _scaleY * Math.cos(_skewX);		}		/**		 * Sets and returns the skew in the direction x for the DisplayObject in radians.		 */		public function get skewX() : Number {			return _skewX;		}		public function set scale(amount : Number) : void {			scaleY = scaleX = amount;		}		public function set scaleX(amount : Number) : void {			_scaleX = amount;						mtx.a = _scaleX * Math.cos(_skewY);			mtx.b = _scaleX * Math.sin(_skewY);		}		public function get scaleX() : Number {			return _scaleX;		}		public function set scaleY(amount : Number) : void {			_scaleY = amount;						mtx.c = _scaleY * -Math.sin(_skewX);			mtx.d = _scaleY * Math.cos(_skewX);		}		public function get scaleY() : Number {			return _scaleY;		}		public function render() : void {			this.lock();			this.fillRect(rect, 0x00FFFFFF);			this.draw(source, mtx);			this.colorTransform(rect, colorTrans);			this.unlock();		}	}}